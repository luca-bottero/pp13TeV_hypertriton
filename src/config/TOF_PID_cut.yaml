flag_dict :
  train_model         : True
  benchmark_opt       : False
  optimize_bayes      : False
  optimize_optuna     : False
  use_default_param   : False      #If True XGBOOST's default params are used
  norm_on_sidebands   : False
  #Plots' flags
  plot_m_mppivert     : False
  plot_mppi_mdpi      : False
  plot_mppi_mdpi_fine : False
  plot_presel_eff     : False
  plot_scatter        : False
  plot_optim          : True
  root_plots          : False
  n_jobs              : 64
  timeout             : 1200

filename_dict :
  data_path           : '../data/TOF_PID_cut/'
  analysis_name       : 'TOF_PID_cut'
  MC_signal_filename  : 'SignalTable_pp13TeV_tofPID_mtexp_OLD.root'
  appl_bckg_filename  : 'DataTable_pp_LS_OLD.root'
  train_bckg_filename : 'DataTable_pp_LS_OLD.root'   
  data_filename       : 'DataTable_pp_OLD.root'  
  MC_signal_table     : 'SignalTable'
  appl_bckg_table     : 'DataTable'
  train_bckg_table    : 'DataTable'
  data_table          : 'DataTable'

presel_dict :
  MC_presel           : 'rej_accept > 0 and pt > 1.5'    
  appl_bckg_presel    : 'centrality < 1. and pt > 1.5'
  train_bckg_presel   : 'centrality < 1. and pt > 1.5'
  data_presel         : 'centrality < 1. and pt > 1.5'
  bckg_presel_vars    : ['ct', 'pt']
  data_presel_vars    : ['ct', 'pt']

#Result from the optimiziation (100 cores for 600 seconds)
params : { 'objective': 'binary:logistic',
        'use_label_encoder': False,
        'base_score': 0.5,
        'booster': 'gbtree',
        'colsample_bylevel': 1,
        'colsample_bynode': 1,
        'colsample_bytree': 0.6930400820913286,
        'gamma': 0.31776391412570243,
        'learning_rate': 0.03992542641931217,
        'max_delta_step': 0,
        'max_depth': 7,
        'min_child_weight': 9,
        'n_estimators': 476,
        'n_jobs': 16,
        'reg_alpha': 0,
        'reg_lambda': 1,
        'scale_pos_weight': 1,
        'subsample': 0.6905960143347599,}

params_range : {
    max_depth : [5, 20],           # defines the maximum depth of a single tree [regularization]
    learning_rate : [0.01, 0.3],   # learning rate
    n_estimators : [50, 500],      # number of boosting trees
    gamma : [0.3, 1.1],            # specifies the minimum loss reduction required to make a split
    min_child_weight : [1, 12],
    subsample : [0.5, 0.9],        # denotes the fraction of observations to be randomly sampled for each tree
    colsample_bytree : [0.5, 0.9]
    }

eff_array  : [0.3,0.9,0.01]       #min, max, step
train_vars : ["ct", "cos_pa" , "tpc_ncls_de" , "tpc_ncls_pr" , "tpc_ncls_pi", "tpc_nsig_de", "tpc_nsig_pr",
                  "tpc_nsig_pi", "dca_de_pr", "dca_de_pi", "dca_pr_pi", "dca_de_sv", "dca_pr_sv", "dca_pi_sv", "chi2"]